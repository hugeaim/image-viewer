{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","external \"electron\""],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,2vBAA2vB,mBAAmB,cAAc,sV;;;;;;;;;;;;;;;;ACAlvB;AAClC,0DAAM,CAAgC;AAO9C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;QACd,oBAAe,GAAG,EAAE,CAAC;IAwBvB,CAAC;IAtBC,6BAAM,GAAN;QACA,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC3B,MAAM,CAAC,cAAc,CAAC;YACvB,UAAU,EAAE;gBACX,UAAU;gBACV,eAAe;aACf;YACD,OAAO,EAAE;gBACR;oBACM,IAAI,EAAE,QAAQ;oBACd,qBAAqB;oBAC1B,UAAU,EAAE,CAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAE,CAAC,qCAAqC;iBAChG;aACD;SACD,EACD,UAAS,QAAQ;YACb,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,QAAQ,CAAC,CAAC;YACjD,EAAE,EAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,mBAAmB;YACpB,CAAC;QACF,CAAC,CAAC,CAAC;IACH,CAAC;IAzBU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AAEM;AAY/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;ACftB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACPW;AAEkC;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;ACblC,qC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"div-image\\\">\\n  <div id='div-center-container' class='div-center-container'>\\n    <button *ngIf=\\\"!currentImageUrl\\\" (click)=\\\"onOpen()\\\"\\n      id=\\\"open-file\\\"  type=\\\"button\\\" class=\\\"btn btn-secondary-outline btn-lg\\\">Open</button>\\n\\n    <img *ngIf=\\\"currentImageUrl\\\" id=\\\"currentImage\\\" />\\n  </div>\\n\\n  <div *ngIf=\\\"currentImageUrl\\\" id=\\\"control-panel\\\">\\n      <div class=\\\"control-buttons text-center\\\">\\n        <div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"rotate-left\\\"><i class=\\\"fa fa-undo fa-1x\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" id=\\\"previous\\\"><i class=\\\"fa fa-arrow-circle-left fa-1x\\\"></i></button>\\n          <label style=\\\"margin-left: 5px; margin-right: 5px; color: white;\\\" id=\\\"directoryStats\\\"></label>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" id=\\\"next\\\"><i class=\\\"fa fa-arrow-circle-right fa-1x\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"rotate-right\\\"><i class=\\\"fa fa-repeat fa-1x\\\"></i></button>\\n        </div>\\n      </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nconst { dialog } = require('electron').remote;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  currentImageUrl = '';\n\n  onOpen(): void {\n\t\tconsole.log('on open click');\n    dialog.showOpenDialog({\n\t\t\tproperties: [\n\t\t\t\t'openFile',\n\t\t\t\t'openDirectory'\n\t\t\t],\n\t\t\tfilters: [\n\t\t\t\t{\n          name: 'Images',\n          // TODO: constants!!!\n\t\t\t\t\textensions: [ 'png', 'jpg', 'jpeg', 'bmp', 'gif', 'tiff' ] //constants.SupportedImageExtensions\t\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tfunction(fileName) {\n      console.log('selected filename: ' + fileName);\n\t\t\tif(fileName) {\n\t\t\t\t//onOpen(fileName);\n\t\t\t}\n\t\t});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","'use strict';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","module.exports = require(\"electron\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"electron\"\n// module id = electron\n// module chunks = main"],"sourceRoot":"webpack:///"}